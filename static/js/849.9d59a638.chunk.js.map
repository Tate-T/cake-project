{"version":3,"file":"static/js/849.9d59a638.chunk.js","mappings":"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","sources":["webpack://cake-project/./src/components/Container/Container.module.css?9f71","components/Container/Container.jsx","webpack://cake-project/./src/components/Header/Header.module.css?4e72","webpack://cake-project/./src/components/Auth/Auth.module.css?93a7","icons/close.svg","icons/cupcake.svg","icons/cookie.svg","components/Auth/Auth.jsx","components/Header/Header.jsx","webpack://cake-project/./src/components/SearchForm/SearchForm.module.css?d6f1","components/SearchForm/SearchForm.jsx","webpack://cake-project/./src/pages/Articles/Articles.module.css?32cc","imgs/svg/backup.svg","../node_modules/reselect/src/utils.ts","../node_modules/reselect/src/autotrackMemoize/proxy.ts","../node_modules/reselect/src/weakMapMemoize.ts","../node_modules/reselect/src/createSelectorCreator.ts","../node_modules/reselect/src/createStructuredSelector.ts","redux/articles/selectors.js","pages/Articles/Articles.jsx","../node_modules/nanoid/index.browser.js","../node_modules/nanoid/url-alphabet/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Container_container__-1hQ5\"};","import styles from \"./Container.module.css\";\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={styles.container}>{children}</div>\r\n);\r\n\r\nexport default Container;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"Header_header__tjG8W\",\"headerLogo\":\"Header_headerLogo__OXtKJ\",\"headerBox\":\"Header_headerBox__NvZPk\",\"headerCountryBtn\":\"Header_headerCountryBtn__TKU-B\",\"headerNav\":\"Header_headerNav__kwF7G\",\"headerList\":\"Header_headerList__EvmnR\",\"headerLink\":\"Header_headerLink__Vfvu1\",\"headerSystemBox\":\"Header_headerSystemBox__O1SHX\",\"headerChatBtn\":\"Header_headerChatBtn__qDGb1\",\"headerLoginBtn\":\"Header_headerLoginBtn__aRpYG\",\"headerActive\":\"Header_headerActive__UzAM7\"};","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"Auth_overlay__Z1UxF\",\"modal\":\"Auth_modal__lYtgm\",\"auth__close-btn\":\"Auth_auth__close-btn__f8uqR\",\"auth__title\":\"Auth_auth__title__cWDaa\",\"auth__list\":\"Auth_auth__list__nOTxO\",\"auth__item\":\"Auth_auth__item__P0Oa7\",\"auth__img\":\"Auth_auth__img__tNvey\",\"auth__subtitle\":\"Auth_auth__subtitle__Oi2ul\",\"auth__text\":\"Auth_auth__text__cY5gy\"};","var _g, _defs;\nconst _excluded = [\"title\", \"titleId\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var s = Object.getOwnPropertySymbols(e); for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.includes(n)) continue; t[n] = r[n]; } return t; }\nimport * as React from \"react\";\nfunction SvgClose(_ref, svgRef) {\n  let {\n      title,\n      titleId\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 30,\n    height: 30,\n    viewBox: \"0 0 30 30\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip0_134_18845)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M23.75 8.0125L21.9875 6.25L15 13.2375L8.0125 6.25L6.25 8.0125L13.2375 15L6.25 21.9875L8.0125 23.75L15 16.7625L21.9875 23.75L23.75 21.9875L16.7625 15L23.75 8.0125Z\",\n    fill: \"#84A6C2\"\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip0_134_18845\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 30,\n    height: 30,\n    fill: \"white\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgClose);\nexport default __webpack_public_path__ + \"static/media/close.9980ff947c5079ff9334e0e45f2844ac.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _path3, _path4;\nconst _excluded = [\"title\", \"titleId\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var s = Object.getOwnPropertySymbols(e); for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.includes(n)) continue; t[n] = r[n]; } return t; }\nimport * as React from \"react\";\nfunction SvgCupcake(_ref, svgRef) {\n  let {\n      title,\n      titleId\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 75,\n    height: 75,\n    viewBox: \"0 0 75 75\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M59.375 43.75H15.625L18.3667 62.9419C18.5866 64.4815 19.9051 65.625 21.4603 65.625H53.5397C55.0949 65.625 56.4134 64.4815 56.6333 62.9419L59.375 43.75Z\",\n    stroke: \"#FDAD6D\",\n    strokeWidth: 6.25,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M43.75 65.625L43.75 43.75\",\n    stroke: \"#FDAD6D\",\n    strokeWidth: 6.25,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M31.25 65.625L31.25 43.75\",\n    stroke: \"#FDAD6D\",\n    strokeWidth: 6.25,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M15.625 43.75C11.6009 42.7839 9.375 39.148 9.375 35.1562C9.375 32.0433 11.1806 29.3169 13.8842 27.8091C14.9093 27.2375 15.625 26.2301 15.625 25.1302C15.625 16.4288 23.3201 9.375 32.8125 9.375C36.3498 9.375 39.6375 10.3545 42.3704 12.0338C43.5326 12.7479 45.0432 12.8218 46.3938 12.4871C47.0452 12.3257 47.7304 12.2396 48.4375 12.2396C52.7522 12.2396 56.25 15.4459 56.25 19.401C56.25 20.3685 56.8653 21.3121 57.8426 21.6775C62.4076 23.3841 65.625 27.4935 65.625 32.2917C65.625 36.7612 63.4471 41.8611 59.375 43.75H15.625Z\",\n    stroke: \"#FDAD6D\",\n    strokeWidth: 6.25,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgCupcake);\nexport default __webpack_public_path__ + \"static/media/cupcake.929d076c959d887873321c69149d7c90.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8;\nconst _excluded = [\"title\", \"titleId\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var s = Object.getOwnPropertySymbols(e); for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.includes(n)) continue; t[n] = r[n]; } return t; }\nimport * as React from \"react\";\nfunction SvgCookie(_ref, svgRef) {\n  let {\n      title,\n      titleId\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 75,\n    height: 75,\n    viewBox: \"0 0 75 75\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M31.25 53.125H31.2553V53.1303H31.25V53.125Z\",\n    stroke: \"#84A6C2\",\n    strokeWidth: 6.25,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M46.875 46.875H46.8803V46.8803H46.875V46.875Z\",\n    stroke: \"#84A6C2\",\n    strokeWidth: 6.25,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M34.375 37.5H34.3803V37.5053H34.375V37.5Z\",\n    stroke: \"#84A6C2\",\n    strokeWidth: 6.25,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M50 31.25H50.0053V31.2553H50V31.25Z\",\n    stroke: \"#84A6C2\",\n    strokeWidth: 6.25,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.375 21.875H9.38033V21.8803H9.375V21.875Z\",\n    stroke: \"#84A6C2\",\n    strokeWidth: 6.25,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M25 9.375H25.0053V9.38033H25V9.375Z\",\n    stroke: \"#84A6C2\",\n    strokeWidth: 6.25,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12.5 9.375H12.5053V9.38033H12.5V9.375Z\",\n    stroke: \"#84A6C2\",\n    strokeWidth: 6.25,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19.6359 37.4934C22.9773 34.1648 24.0408 29.4263 22.8264 25.2002C27.0687 26.4099 31.8254 25.3505 35.1668 22.0219C38.6017 18.6001 39.6294 13.6884 38.25 9.375C45.1863 9.58531 52.0596 12.3274 57.3538 17.6014C68.3821 28.5875 68.3821 46.3994 57.3538 57.3855C46.3256 68.3715 28.4454 68.3715 17.4172 57.3855C12.8206 52.8064 10.1398 47.0416 9.375 41.0794C13.0317 41.4819 16.8321 40.2865 19.6359 37.4934Z\",\n    stroke: \"#84A6C2\",\n    strokeWidth: 6.25,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgCookie);\nexport default __webpack_public_path__ + \"static/media/cookie.fa028ba9a653c70bceb1888a84703ff0.svg\";\nexport { ForwardRef as ReactComponent };","import css from \"./Auth.module.css\";\r\nimport CloseIcon from \"../../icons/close.svg\";\r\nimport CupcakeIcon from \"../../icons/cupcake.svg\";\r\nimport CookieIcon from \"../../icons/cookie.svg\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Auth = ({ setIsOpen }) => {\r\n  return (\r\n    <div className={css.overlay}>\r\n      <div className={css.modal}>\r\n        <button className={css[\"auth__close-btn\"]} onClick={setIsOpen}>\r\n          <img src={CloseIcon} alt=\"Кнопка закриття\" />\r\n        </button>\r\n        <h2 className={css.auth__title}>Реєстрація</h2>\r\n        <ul className={css.auth__list}>\r\n          <li className={css.auth__item}>\r\n            <Link>\r\n              <img\r\n                className={css.auth__img}\r\n                src={CookieIcon}\r\n                alt=\"cookie icon\"\r\n              />\r\n              <div className={css.auth__box}>\r\n                <h3 className={css.auth__subtitle}>Покупець</h3>\r\n                <p className={css.auth__text}>\r\n                  Хочу купувати, дарувати та їсти\r\n                </p>\r\n              </div>\r\n            </Link>\r\n          </li>\r\n          <li className={css.auth__item}>\r\n            <Link to=\"/confectioner/login\">\r\n              <img\r\n                className={css.auth__img}\r\n                src={CupcakeIcon}\r\n                alt=\"cupcake icon\"\r\n              />\r\n              <div className={css.auth__box}>\r\n                <h3 className={css.auth__subtitle}>Кондитер</h3>\r\n                <p className={css.auth__text}>\r\n                  Хочу випікати, прикрашати та продавати\r\n                </p>\r\n              </div>\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import { Link, NavLink } from \"react-router-dom\";\r\nimport styles from \"./Header.module.css\";\r\nimport Container from \"../Container/Container\";\r\nimport { useState } from \"react\";\r\nimport Auth from \"../Auth/Auth\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { toggleModal } from \"../../redux/auth/authSlice\";\r\n\r\nconst Header = () => {\r\n  // const [isOpen, setIsOpen] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const isOpen = useSelector((state) => state.auth.isOpenHeaderModal);\r\n  // console.log(isOpen);\r\n\r\n  const setIsOpen = () => {\r\n    dispatch(toggleModal());\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isOpen && <Auth setIsOpen={setIsOpen} />}\r\n      <header className={styles.header}>\r\n        <Container>\r\n          <div className={styles.headerBox}>\r\n            <Link to=\"/\" className={styles.headerLogo}>\r\n              MyCake\r\n            </Link>\r\n            <button type=\"button\" className={styles.headerCountryBtn}>\r\n              <p className={styles.headerCountryText}>Вся Україна</p>\r\n            </button>\r\n            <nav className={styles.headerNav}>\r\n              <ul className={styles.headerList}>\r\n                <li className={styles.headerItem}>\r\n                  <NavLink\r\n                    to=\"/desserts\"\r\n                    className={({ isActive }) =>\r\n                      isActive\r\n                        ? `${styles.headerActive} ${styles.headerLink}`\r\n                        : `${styles.headerLink}`\r\n                    }\r\n                  >\r\n                    Десерти\r\n                  </NavLink>\r\n                </li>\r\n                <li className={styles.headerItem}>\r\n                  <NavLink\r\n                    to=\"/confecioners\"\r\n                    className={({ isActive }) =>\r\n                      isActive\r\n                        ? `${styles.headerActive} ${styles.headerLink}`\r\n                        : `${styles.headerLink}`\r\n                    }\r\n                  >\r\n                    Кращі кондитери\r\n                  </NavLink>\r\n                </li>\r\n                <li className={styles.headerItem}>\r\n                  <NavLink\r\n                    to=\"/articles\"\r\n                    className={({ isActive }) =>\r\n                      isActive\r\n                        ? `${styles.headerActive} ${styles.headerLink}`\r\n                        : `${styles.headerLink}`\r\n                    }\r\n                  >\r\n                    Корисні статті\r\n                  </NavLink>\r\n                </li>\r\n              </ul>\r\n            </nav>\r\n            <div className={styles.headerSystemBox}>\r\n              <button type=\"button\" className={styles.headerChatBtn}>\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  width=\"30\"\r\n                  height=\"30\"\r\n                  viewBox=\"0 0 30 30\"\r\n                  fill=\"none\"\r\n                >\r\n                  <g clip-path=\"url(#clip0_5879_12665)\">\r\n                    <path\r\n                      d=\"M26.25 7.5H23.75V18.75H7.5V21.25C7.5 21.9375 8.0625 22.5 8.75 22.5H22.5L27.5 27.5V8.75C27.5 8.0625 26.9375 7.5 26.25 7.5ZM21.25 15V3.75C21.25 3.0625 20.6875 2.5 20 2.5H3.75C3.0625 2.5 2.5 3.0625 2.5 3.75V21.25L7.5 16.25H20C20.6875 16.25 21.25 15.6875 21.25 15Z\"\r\n                      fill=\"#43607C\"\r\n                    />\r\n                  </g>\r\n                  <defs>\r\n                    <clipPath id=\"clip0_5879_12665\">\r\n                      <rect width=\"30\" height=\"30\" fill=\"white\" />\r\n                    </clipPath>\r\n                  </defs>\r\n                </svg>\r\n              </button>\r\n              <button type=\"button\" className={styles.headerLoginBtn}>\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  width=\"30\"\r\n                  height=\"30\"\r\n                  viewBox=\"0 0 30 30\"\r\n                  fill=\"none\"\r\n                >\r\n                  <g clip-path=\"url(#clip0_5879_11818)\">\r\n                    <path\r\n                      d=\"M15 2.5C8.1 2.5 2.5 8.1 2.5 15C2.5 21.9 8.1 27.5 15 27.5C21.9 27.5 27.5 21.9 27.5 15C27.5 8.1 21.9 2.5 15 2.5ZM15 6.25C17.075 6.25 18.75 7.925 18.75 10C18.75 12.075 17.075 13.75 15 13.75C12.925 13.75 11.25 12.075 11.25 10C11.25 7.925 12.925 6.25 15 6.25ZM15 24C11.875 24 9.1125 22.4 7.5 19.975C7.5375 17.4875 12.5 16.125 15 16.125C17.4875 16.125 22.4625 17.4875 22.5 19.975C20.8875 22.4 18.125 24 15 24Z\"\r\n                      fill=\"#43607C\"\r\n                    />\r\n                  </g>\r\n                  <defs>\r\n                    <clipPath id=\"clip0_5879_11818\">\r\n                      <rect width=\"30\" height=\"30\" fill=\"white\" />\r\n                    </clipPath>\r\n                  </defs>\r\n                </svg>\r\n                <p className={styles.headerLoginText} onClick={setIsOpen}>\r\n                  Увійти\r\n                </p>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </Container>\r\n      </header>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"searchform__form\":\"SearchForm_searchform__form__kmy2z\",\"searchform__input\":\"SearchForm_searchform__input__QRpAl\",\"searchform__btn\":\"SearchForm_searchform__btn__j5TyD\"};","import css from \"./SearchForm.module.css\";\r\n\r\nconst SearchForm = ({ placeholder, cb, value }) => {\r\n  return (\r\n    <form className={css.searchform__form}>\r\n      <input\r\n        placeholder={placeholder}\r\n        className={css.searchform__input}\r\n        onChange={cb}\r\n        value={value}\r\n      />\r\n      <button className={css.searchform__btn}>Шукати</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SearchForm;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"articles__filter\":\"Articles_articles__filter__q3b-N\",\"articles__list\":\"Articles_articles__list__JbtrR\",\"articles__item\":\"Articles_articles__item__lE0B9\",\"articles__loadmore\":\"Articles_articles__loadmore__IbdAj\",\"articles__pagination\":\"Articles_articles__pagination__myifB\",\"articles__arrow--right\":\"Articles_articles__arrow--right__K6Oyz\",\"articles__arrow--left\":\"Articles_articles__arrow--left__q4FpM\",\"articles__checkbox\":\"Articles_articles__checkbox__fLFBQ\"};","var _g, _defs;\nconst _excluded = [\"title\", \"titleId\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var s = Object.getOwnPropertySymbols(e); for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.includes(n)) continue; t[n] = r[n]; } return t; }\nimport * as React from \"react\";\nfunction SvgBackup(_ref, svgRef) {\n  let {\n      title,\n      titleId\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 25,\n    height: 26,\n    viewBox: \"0 0 25 26\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"settings_backup_restore\",\n    clipPath: \"url(#clip0_5811_10911)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector\",\n    d: \"M14.5833 13C14.5833 11.8542 13.6458 10.9167 12.5 10.9167C11.3542 10.9167 10.4167 11.8542 10.4167 13C10.4167 14.1458 11.3542 15.0833 12.5 15.0833C13.6458 15.0833 14.5833 14.1458 14.5833 13ZM12.5 3.625C7.32292 3.625 3.125 7.82292 3.125 13H0L4.16667 17.1667L8.33333 13H5.20833C5.20833 8.96875 8.46875 5.70833 12.5 5.70833C16.5312 5.70833 19.7917 8.96875 19.7917 13C19.7917 17.0312 16.5312 20.2917 12.5 20.2917C10.9271 20.2917 9.46875 19.7812 8.27083 18.9375L6.79167 20.4375C8.375 21.6458 10.3542 22.375 12.5 22.375C17.6771 22.375 21.875 18.1771 21.875 13C21.875 7.82292 17.6771 3.625 12.5 3.625Z\",\n    fill: \"#43607C\"\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip0_5811_10911\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 25,\n    height: 25,\n    fill: \"white\",\n    transform: \"translate(0 0.5)\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgBackup);\nexport default __webpack_public_path__ + \"static/media/backup.0f2fedd4efbfd6dde5cbac07cabee0c3.svg\";\nexport { ForwardRef as ReactComponent };","import { runIdentityFunctionCheck } from './devModeChecks/identityFunctionCheck'\r\nimport { runInputStabilityCheck } from './devModeChecks/inputStabilityCheck'\r\nimport { globalDevModeChecks } from './devModeChecks/setGlobalDevModeChecks'\r\n// eslint-disable-next-line @typescript-eslint/consistent-type-imports\r\nimport type {\r\n  DevModeChecks,\r\n  Selector,\r\n  SelectorArray,\r\n  DevModeChecksExecutionInfo\r\n} from './types'\r\n\r\nexport const NOT_FOUND = /* @__PURE__ */ Symbol('NOT_FOUND')\r\nexport type NOT_FOUND_TYPE = typeof NOT_FOUND\r\n\r\n/**\r\n * Assert that the provided value is a function. If the assertion fails,\r\n * a `TypeError` is thrown with an optional custom error message.\r\n *\r\n * @param func - The value to be checked.\r\n * @param  errorMessage - An optional custom error message to use if the assertion fails.\r\n * @throws A `TypeError` if the assertion fails.\r\n */\r\nexport function assertIsFunction<FunctionType extends Function>(\r\n  func: unknown,\r\n  errorMessage = `expected a function, instead received ${typeof func}`\r\n): asserts func is FunctionType {\r\n  if (typeof func !== 'function') {\r\n    throw new TypeError(errorMessage)\r\n  }\r\n}\r\n\r\n/**\r\n * Assert that the provided value is an object. If the assertion fails,\r\n * a `TypeError` is thrown with an optional custom error message.\r\n *\r\n * @param object - The value to be checked.\r\n * @param  errorMessage - An optional custom error message to use if the assertion fails.\r\n * @throws A `TypeError` if the assertion fails.\r\n */\r\nexport function assertIsObject<ObjectType extends Record<string, unknown>>(\r\n  object: unknown,\r\n  errorMessage = `expected an object, instead received ${typeof object}`\r\n): asserts object is ObjectType {\r\n  if (typeof object !== 'object') {\r\n    throw new TypeError(errorMessage)\r\n  }\r\n}\r\n\r\n/**\r\n * Assert that the provided array is an array of functions. If the assertion fails,\r\n * a `TypeError` is thrown with an optional custom error message.\r\n *\r\n * @param array - The array to be checked.\r\n * @param  errorMessage - An optional custom error message to use if the assertion fails.\r\n * @throws A `TypeError` if the assertion fails.\r\n */\r\nexport function assertIsArrayOfFunctions<FunctionType extends Function>(\r\n  array: unknown[],\r\n  errorMessage = `expected all items to be functions, instead received the following types: `\r\n): asserts array is FunctionType[] {\r\n  if (\r\n    !array.every((item): item is FunctionType => typeof item === 'function')\r\n  ) {\r\n    const itemTypes = array\r\n      .map(item =>\r\n        typeof item === 'function'\r\n          ? `function ${item.name || 'unnamed'}()`\r\n          : typeof item\r\n      )\r\n      .join(', ')\r\n    throw new TypeError(`${errorMessage}[${itemTypes}]`)\r\n  }\r\n}\r\n\r\n/**\r\n * Ensure that the input is an array. If it's already an array, it's returned as is.\r\n * If it's not an array, it will be wrapped in a new array.\r\n *\r\n * @param item - The item to be checked.\r\n * @returns An array containing the input item. If the input is already an array, it's returned without modification.\r\n */\r\nexport const ensureIsArray = (item: unknown) => {\r\n  return Array.isArray(item) ? item : [item]\r\n}\r\n\r\n/**\r\n * Extracts the \"dependencies\" / \"input selectors\" from the arguments of `createSelector`.\r\n *\r\n * @param createSelectorArgs - Arguments passed to `createSelector` as an array.\r\n * @returns An array of \"input selectors\" / \"dependencies\".\r\n * @throws A `TypeError` if any of the input selectors is not function.\r\n */\r\nexport function getDependencies(createSelectorArgs: unknown[]) {\r\n  const dependencies = Array.isArray(createSelectorArgs[0])\r\n    ? createSelectorArgs[0]\r\n    : createSelectorArgs\r\n\r\n  assertIsArrayOfFunctions<Selector>(\r\n    dependencies,\r\n    `createSelector expects all input-selectors to be functions, but received the following types: `\r\n  )\r\n\r\n  return dependencies as SelectorArray\r\n}\r\n\r\n/**\r\n * Runs each input selector and returns their collective results as an array.\r\n *\r\n * @param dependencies - An array of \"dependencies\" or \"input selectors\".\r\n * @param inputSelectorArgs - An array of arguments being passed to the input selectors.\r\n * @returns An array of input selector results.\r\n */\r\nexport function collectInputSelectorResults(\r\n  dependencies: SelectorArray,\r\n  inputSelectorArgs: unknown[] | IArguments\r\n) {\r\n  const inputSelectorResults = []\r\n  const { length } = dependencies\r\n  for (let i = 0; i < length; i++) {\r\n    // @ts-ignore\r\n    // apply arguments instead of spreading and mutate a local list of params for performance.\r\n    inputSelectorResults.push(dependencies[i].apply(null, inputSelectorArgs))\r\n  }\r\n  return inputSelectorResults\r\n}\r\n\r\n/**\r\n * Retrieves execution information for development mode checks.\r\n *\r\n * @param devModeChecks - Custom Settings for development mode checks. These settings will override the global defaults.\r\n * @param firstRun - Indicates whether it is the first time the selector has run.\r\n * @returns  An object containing the execution information for each development mode check.\r\n */\r\nexport const getDevModeChecksExecutionInfo = (\r\n  firstRun: boolean,\r\n  devModeChecks: Partial<DevModeChecks>\r\n) => {\r\n  const { identityFunctionCheck, inputStabilityCheck } = {\r\n    ...globalDevModeChecks,\r\n    ...devModeChecks\r\n  }\r\n  return {\r\n    identityFunctionCheck: {\r\n      shouldRun:\r\n        identityFunctionCheck === 'always' ||\r\n        (identityFunctionCheck === 'once' && firstRun),\r\n      run: runIdentityFunctionCheck\r\n    },\r\n    inputStabilityCheck: {\r\n      shouldRun:\r\n        inputStabilityCheck === 'always' ||\r\n        (inputStabilityCheck === 'once' && firstRun),\r\n      run: runInputStabilityCheck\r\n    }\r\n  } satisfies DevModeChecksExecutionInfo\r\n}\r\n","// Original source:\r\n// - https://github.com/simonihmig/tracked-redux/blob/master/packages/tracked-redux/src/-private/proxy.ts\r\n\r\nimport type { Node, Tag } from './tracking'\r\nimport {\r\n  consumeCollection,\r\n  consumeTag,\r\n  createTag,\r\n  dirtyCollection,\r\n  dirtyTag\r\n} from './tracking'\r\n\r\nexport const REDUX_PROXY_LABEL = Symbol()\r\n\r\nlet nextId = 0\r\n\r\nconst proto = Object.getPrototypeOf({})\r\n\r\nclass ObjectTreeNode<T extends Record<string, unknown>> implements Node<T> {\r\n  proxy: T = new Proxy(this, objectProxyHandler) as unknown as T\r\n  tag = createTag()\r\n  tags = {} as Record<string, Tag>\r\n  children = {} as Record<string, Node>\r\n  collectionTag = null\r\n  id = nextId++\r\n\r\n  constructor(public value: T) {\r\n    this.value = value\r\n    this.tag.value = value\r\n  }\r\n}\r\n\r\nconst objectProxyHandler = {\r\n  get(node: Node, key: string | symbol): unknown {\r\n    function calculateResult() {\r\n      const { value } = node\r\n\r\n      const childValue = Reflect.get(value, key)\r\n\r\n      if (typeof key === 'symbol') {\r\n        return childValue\r\n      }\r\n\r\n      if (key in proto) {\r\n        return childValue\r\n      }\r\n\r\n      if (typeof childValue === 'object' && childValue !== null) {\r\n        let childNode = node.children[key]\r\n\r\n        if (childNode === undefined) {\r\n          childNode = node.children[key] = createNode(childValue)\r\n        }\r\n\r\n        if (childNode.tag) {\r\n          consumeTag(childNode.tag)\r\n        }\r\n\r\n        return childNode.proxy\r\n      } else {\r\n        let tag = node.tags[key]\r\n\r\n        if (tag === undefined) {\r\n          tag = node.tags[key] = createTag()\r\n          tag.value = childValue\r\n        }\r\n\r\n        consumeTag(tag)\r\n\r\n        return childValue\r\n      }\r\n    }\r\n    const res = calculateResult()\r\n    return res\r\n  },\r\n\r\n  ownKeys(node: Node): ArrayLike<string | symbol> {\r\n    consumeCollection(node)\r\n    return Reflect.ownKeys(node.value)\r\n  },\r\n\r\n  getOwnPropertyDescriptor(\r\n    node: Node,\r\n    prop: string | symbol\r\n  ): PropertyDescriptor | undefined {\r\n    return Reflect.getOwnPropertyDescriptor(node.value, prop)\r\n  },\r\n\r\n  has(node: Node, prop: string | symbol): boolean {\r\n    return Reflect.has(node.value, prop)\r\n  }\r\n}\r\n\r\nclass ArrayTreeNode<T extends Array<unknown>> implements Node<T> {\r\n  proxy: T = new Proxy([this], arrayProxyHandler) as unknown as T\r\n  tag = createTag()\r\n  tags = {}\r\n  children = {}\r\n  collectionTag = null\r\n  id = nextId++\r\n\r\n  constructor(public value: T) {\r\n    this.value = value\r\n    this.tag.value = value\r\n  }\r\n}\r\n\r\nconst arrayProxyHandler = {\r\n  get([node]: [Node], key: string | symbol): unknown {\r\n    if (key === 'length') {\r\n      consumeCollection(node)\r\n    }\r\n\r\n    return objectProxyHandler.get(node, key)\r\n  },\r\n\r\n  ownKeys([node]: [Node]): ArrayLike<string | symbol> {\r\n    return objectProxyHandler.ownKeys(node)\r\n  },\r\n\r\n  getOwnPropertyDescriptor(\r\n    [node]: [Node],\r\n    prop: string | symbol\r\n  ): PropertyDescriptor | undefined {\r\n    return objectProxyHandler.getOwnPropertyDescriptor(node, prop)\r\n  },\r\n\r\n  has([node]: [Node], prop: string | symbol): boolean {\r\n    return objectProxyHandler.has(node, prop)\r\n  }\r\n}\r\n\r\nexport function createNode<T extends Array<unknown> | Record<string, unknown>>(\r\n  value: T\r\n): Node<T> {\r\n  if (Array.isArray(value)) {\r\n    return new ArrayTreeNode(value)\r\n  }\r\n\r\n  return new ObjectTreeNode(value) as Node<T>\r\n}\r\n\r\nconst keysMap = new WeakMap<\r\n  Array<unknown> | Record<string, unknown>,\r\n  Set<string>\r\n>()\r\n\r\nexport function updateNode<T extends Array<unknown> | Record<string, unknown>>(\r\n  node: Node<T>,\r\n  newValue: T\r\n): void {\r\n  const { value, tags, children } = node\r\n\r\n  node.value = newValue\r\n\r\n  if (\r\n    Array.isArray(value) &&\r\n    Array.isArray(newValue) &&\r\n    value.length !== newValue.length\r\n  ) {\r\n    dirtyCollection(node)\r\n  } else {\r\n    if (value !== newValue) {\r\n      let oldKeysSize = 0\r\n      let newKeysSize = 0\r\n      let anyKeysAdded = false\r\n\r\n      for (const _key in value) {\r\n        oldKeysSize++\r\n      }\r\n\r\n      for (const key in newValue) {\r\n        newKeysSize++\r\n        if (!(key in value)) {\r\n          anyKeysAdded = true\r\n          break\r\n        }\r\n      }\r\n\r\n      const isDifferent = anyKeysAdded || oldKeysSize !== newKeysSize\r\n\r\n      if (isDifferent) {\r\n        dirtyCollection(node)\r\n      }\r\n    }\r\n  }\r\n\r\n  for (const key in tags) {\r\n    const childValue = (value as Record<string, unknown>)[key]\r\n    const newChildValue = (newValue as Record<string, unknown>)[key]\r\n\r\n    if (childValue !== newChildValue) {\r\n      dirtyCollection(node)\r\n      dirtyTag(tags[key], newChildValue)\r\n    }\r\n\r\n    if (typeof newChildValue === 'object' && newChildValue !== null) {\r\n      delete tags[key]\r\n    }\r\n  }\r\n\r\n  for (const key in children) {\r\n    const childNode = children[key]\r\n    const newChildValue = (newValue as Record<string, unknown>)[key]\r\n\r\n    const childValue = childNode.value\r\n\r\n    if (childValue === newChildValue) {\r\n      continue\r\n    } else if (typeof newChildValue === 'object' && newChildValue !== null) {\r\n      updateNode(childNode, newChildValue as Record<string, unknown>)\r\n    } else {\r\n      deleteNode(childNode)\r\n      delete children[key]\r\n    }\r\n  }\r\n}\r\n\r\nfunction deleteNode(node: Node): void {\r\n  if (node.tag) {\r\n    dirtyTag(node.tag, null)\r\n  }\r\n  dirtyCollection(node)\r\n  for (const key in node.tags) {\r\n    dirtyTag(node.tags[key], null)\r\n  }\r\n  for (const key in node.children) {\r\n    deleteNode(node.children[key])\r\n  }\r\n}\r\n","// Original source:\r\n// - https://github.com/facebook/react/blob/0b974418c9a56f6c560298560265dcf4b65784bc/packages/react/src/ReactCache.js\r\n\r\nimport type {\r\n  AnyFunction,\r\n  DefaultMemoizeFields,\r\n  EqualityFn,\r\n  Simplify\r\n} from './types'\r\n\r\nclass StrongRef<T> {\r\n  constructor(private value: T) {}\r\n  deref() {\r\n    return this.value\r\n  }\r\n}\r\n\r\nconst Ref =\r\n  typeof WeakRef !== 'undefined'\r\n    ? WeakRef\r\n    : (StrongRef as unknown as typeof WeakRef)\r\n\r\nconst UNTERMINATED = 0\r\nconst TERMINATED = 1\r\n\r\ninterface UnterminatedCacheNode<T> {\r\n  /**\r\n   * Status, represents whether the cached computation returned a value or threw an error.\r\n   */\r\n  s: 0\r\n  /**\r\n   * Value, either the cached result or an error, depending on status.\r\n   */\r\n  v: void\r\n  /**\r\n   * Object cache, a `WeakMap` where non-primitive arguments are stored.\r\n   */\r\n  o: null | WeakMap<Function | Object, CacheNode<T>>\r\n  /**\r\n   * Primitive cache, a regular Map where primitive arguments are stored.\r\n   */\r\n  p: null | Map<string | number | null | void | symbol | boolean, CacheNode<T>>\r\n}\r\n\r\ninterface TerminatedCacheNode<T> {\r\n  /**\r\n   * Status, represents whether the cached computation returned a value or threw an error.\r\n   */\r\n  s: 1\r\n  /**\r\n   * Value, either the cached result or an error, depending on status.\r\n   */\r\n  v: T\r\n  /**\r\n   * Object cache, a `WeakMap` where non-primitive arguments are stored.\r\n   */\r\n  o: null | WeakMap<Function | Object, CacheNode<T>>\r\n  /**\r\n   * Primitive cache, a regular `Map` where primitive arguments are stored.\r\n   */\r\n  p: null | Map<string | number | null | void | symbol | boolean, CacheNode<T>>\r\n}\r\n\r\ntype CacheNode<T> = TerminatedCacheNode<T> | UnterminatedCacheNode<T>\r\n\r\nfunction createCacheNode<T>(): CacheNode<T> {\r\n  return {\r\n    s: UNTERMINATED,\r\n    v: undefined,\r\n    o: null,\r\n    p: null\r\n  }\r\n}\r\n\r\n/**\r\n * Configuration options for a memoization function utilizing `WeakMap` for\r\n * its caching mechanism.\r\n *\r\n * @template Result - The type of the return value of the memoized function.\r\n *\r\n * @since 5.0.0\r\n * @public\r\n */\r\nexport interface WeakMapMemoizeOptions<Result = any> {\r\n  /**\r\n   * If provided, used to compare a newly generated output value against previous values in the cache.\r\n   * If a match is found, the old value is returned. This addresses the common\r\n   * ```ts\r\n   * todos.map(todo => todo.id)\r\n   * ```\r\n   * use case, where an update to another field in the original data causes a recalculation\r\n   * due to changed references, but the output is still effectively the same.\r\n   *\r\n   * @since 5.0.0\r\n   */\r\n  resultEqualityCheck?: EqualityFn<Result>\r\n}\r\n\r\n/**\r\n * Creates a tree of `WeakMap`-based cache nodes based on the identity of the\r\n * arguments it's been called with (in this case, the extracted values from your input selectors).\r\n * This allows `weakMapMemoize` to have an effectively infinite cache size.\r\n * Cache results will be kept in memory as long as references to the arguments still exist,\r\n * and then cleared out as the arguments are garbage-collected.\r\n *\r\n * __Design Tradeoffs for `weakMapMemoize`:__\r\n * - Pros:\r\n *   - It has an effectively infinite cache size, but you have no control over\r\n *   how long values are kept in cache as it's based on garbage collection and `WeakMap`s.\r\n * - Cons:\r\n *   - There's currently no way to alter the argument comparisons.\r\n *   They're based on strict reference equality.\r\n *   - It's roughly the same speed as `lruMemoize`, although likely a fraction slower.\r\n *\r\n * __Use Cases for `weakMapMemoize`:__\r\n * - This memoizer is likely best used for cases where you need to call the\r\n * same selector instance with many different arguments, such as a single\r\n * selector instance that is used in a list item component and called with\r\n * item IDs like:\r\n *   ```ts\r\n *   useSelector(state => selectSomeData(state, props.category))\r\n *   ```\r\n * @param func - The function to be memoized.\r\n * @returns A memoized function with a `.clearCache()` method attached.\r\n *\r\n * @example\r\n * <caption>Using `createSelector`</caption>\r\n * ```ts\r\n * import { createSelector, weakMapMemoize } from 'reselect'\r\n *\r\n * interface RootState {\r\n *   items: { id: number; category: string; name: string }[]\r\n * }\r\n *\r\n * const selectItemsByCategory = createSelector(\r\n *   [\r\n *     (state: RootState) => state.items,\r\n *     (state: RootState, category: string) => category\r\n *   ],\r\n *   (items, category) => items.filter(item => item.category === category),\r\n *   {\r\n *     memoize: weakMapMemoize,\r\n *     argsMemoize: weakMapMemoize\r\n *   }\r\n * )\r\n * ```\r\n *\r\n * @example\r\n * <caption>Using `createSelectorCreator`</caption>\r\n * ```ts\r\n * import { createSelectorCreator, weakMapMemoize } from 'reselect'\r\n *\r\n * const createSelectorWeakMap = createSelectorCreator({ memoize: weakMapMemoize, argsMemoize: weakMapMemoize })\r\n *\r\n * const selectItemsByCategory = createSelectorWeakMap(\r\n *   [\r\n *     (state: RootState) => state.items,\r\n *     (state: RootState, category: string) => category\r\n *   ],\r\n *   (items, category) => items.filter(item => item.category === category)\r\n * )\r\n * ```\r\n *\r\n * @template Func - The type of the function that is memoized.\r\n *\r\n * @see {@link https://reselect.js.org/api/weakMapMemoize `weakMapMemoize`}\r\n *\r\n * @since 5.0.0\r\n * @public\r\n * @experimental\r\n */\r\nexport function weakMapMemoize<Func extends AnyFunction>(\r\n  func: Func,\r\n  options: WeakMapMemoizeOptions<ReturnType<Func>> = {}\r\n) {\r\n  let fnNode = createCacheNode()\r\n  const { resultEqualityCheck } = options\r\n\r\n  let lastResult: WeakRef<object> | undefined\r\n\r\n  let resultsCount = 0\r\n\r\n  function memoized() {\r\n    let cacheNode = fnNode\r\n    const { length } = arguments\r\n    for (let i = 0, l = length; i < l; i++) {\r\n      const arg = arguments[i]\r\n      if (\r\n        typeof arg === 'function' ||\r\n        (typeof arg === 'object' && arg !== null)\r\n      ) {\r\n        // Objects go into a WeakMap\r\n        let objectCache = cacheNode.o\r\n        if (objectCache === null) {\r\n          cacheNode.o = objectCache = new WeakMap()\r\n        }\r\n        const objectNode = objectCache.get(arg)\r\n        if (objectNode === undefined) {\r\n          cacheNode = createCacheNode()\r\n          objectCache.set(arg, cacheNode)\r\n        } else {\r\n          cacheNode = objectNode\r\n        }\r\n      } else {\r\n        // Primitives go into a regular Map\r\n        let primitiveCache = cacheNode.p\r\n        if (primitiveCache === null) {\r\n          cacheNode.p = primitiveCache = new Map()\r\n        }\r\n        const primitiveNode = primitiveCache.get(arg)\r\n        if (primitiveNode === undefined) {\r\n          cacheNode = createCacheNode()\r\n          primitiveCache.set(arg, cacheNode)\r\n        } else {\r\n          cacheNode = primitiveNode\r\n        }\r\n      }\r\n    }\r\n\r\n    const terminatedNode = cacheNode as unknown as TerminatedCacheNode<any>\r\n\r\n    let result\r\n\r\n    if (cacheNode.s === TERMINATED) {\r\n      result = cacheNode.v\r\n    } else {\r\n      // Allow errors to propagate\r\n      result = func.apply(null, arguments as unknown as any[])\r\n      resultsCount++\r\n\r\n      if (resultEqualityCheck) {\r\n        const lastResultValue = lastResult?.deref?.() ?? lastResult\r\n\r\n        if (\r\n          lastResultValue != null &&\r\n          resultEqualityCheck(lastResultValue as ReturnType<Func>, result)\r\n        ) {\r\n          result = lastResultValue\r\n\r\n          resultsCount !== 0 && resultsCount--\r\n        }\r\n\r\n        const needsWeakRef =\r\n          (typeof result === 'object' && result !== null) ||\r\n          typeof result === 'function'\r\n\r\n        lastResult = needsWeakRef ? new Ref(result) : result\r\n      }\r\n    }\r\n\r\n    terminatedNode.s = TERMINATED\r\n\r\n    terminatedNode.v = result\r\n    return result\r\n  }\r\n\r\n  memoized.clearCache = () => {\r\n    fnNode = createCacheNode()\r\n    memoized.resetResultsCount()\r\n  }\r\n\r\n  memoized.resultsCount = () => resultsCount\r\n\r\n  memoized.resetResultsCount = () => {\r\n    resultsCount = 0\r\n  }\r\n\r\n  return memoized as Func & Simplify<DefaultMemoizeFields>\r\n}\r\n","import { weakMapMemoize } from './weakMapMemoize'\r\n\r\nimport type {\r\n  Combiner,\r\n  CreateSelectorOptions,\r\n  DropFirstParameter,\r\n  ExtractMemoizerFields,\r\n  GetParamsFromSelectors,\r\n  GetStateFromSelectors,\r\n  InterruptRecursion,\r\n  OutputSelector,\r\n  Selector,\r\n  SelectorArray,\r\n  SetRequired,\r\n  Simplify,\r\n  UnknownMemoizer\r\n} from './types'\r\n\r\nimport {\r\n  assertIsFunction,\r\n  collectInputSelectorResults,\r\n  ensureIsArray,\r\n  getDependencies,\r\n  getDevModeChecksExecutionInfo\r\n} from './utils'\r\n\r\n/**\r\n * An instance of `createSelector`, customized with a given memoize implementation.\r\n *\r\n * @template MemoizeFunction - The type of the memoize function that is used to memoize the `resultFunc` inside `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`).\r\n * @template ArgsMemoizeFunction - The type of the optional memoize function that is used to memoize the arguments passed into the output selector generated by `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`). If none is explicitly provided, `weakMapMemoize` will be used.\r\n * @template StateType - The type of state that the selectors created with this selector creator will operate on.\r\n *\r\n * @public\r\n */\r\nexport interface CreateSelectorFunction<\r\n  MemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize,\r\n  ArgsMemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize,\r\n  StateType = any\r\n> {\r\n  /**\r\n   * Creates a memoized selector function.\r\n   *\r\n   * @param createSelectorArgs - An arbitrary number of input selectors as separate inline arguments and a `combiner` function.\r\n   * @returns A memoized output selector.\r\n   *\r\n   * @template InputSelectors - The type of the input selectors as an array.\r\n   * @template Result - The return type of the `combiner` as well as the output selector.\r\n   * @template OverrideMemoizeFunction - The type of the optional `memoize` function that could be passed into the options object to override the original `memoize` function that was initially passed into `createSelectorCreator`.\r\n   * @template OverrideArgsMemoizeFunction - The type of the optional `argsMemoize` function that could be passed into the options object to override the original `argsMemoize` function that was initially passed into `createSelectorCreator`.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createselector `createSelector`}\r\n   */\r\n  <InputSelectors extends SelectorArray<StateType>, Result>(\r\n    ...createSelectorArgs: [\r\n      ...inputSelectors: InputSelectors,\r\n      combiner: Combiner<InputSelectors, Result>\r\n    ]\r\n  ): OutputSelector<\r\n    InputSelectors,\r\n    Result,\r\n    MemoizeFunction,\r\n    ArgsMemoizeFunction\r\n  > &\r\n    InterruptRecursion\r\n\r\n  /**\r\n   * Creates a memoized selector function.\r\n   *\r\n   * @param createSelectorArgs - An arbitrary number of input selectors as separate inline arguments, a `combiner` function and an `options` object.\r\n   * @returns A memoized output selector.\r\n   *\r\n   * @template InputSelectors - The type of the input selectors as an array.\r\n   * @template Result - The return type of the `combiner` as well as the output selector.\r\n   * @template OverrideMemoizeFunction - The type of the optional `memoize` function that could be passed into the options object to override the original `memoize` function that was initially passed into `createSelectorCreator`.\r\n   * @template OverrideArgsMemoizeFunction - The type of the optional `argsMemoize` function that could be passed into the options object to override the original `argsMemoize` function that was initially passed into `createSelectorCreator`.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createselector `createSelector`}\r\n   */\r\n  <\r\n    InputSelectors extends SelectorArray<StateType>,\r\n    Result,\r\n    OverrideMemoizeFunction extends UnknownMemoizer = MemoizeFunction,\r\n    OverrideArgsMemoizeFunction extends UnknownMemoizer = ArgsMemoizeFunction\r\n  >(\r\n    ...createSelectorArgs: [\r\n      ...inputSelectors: InputSelectors,\r\n      combiner: Combiner<InputSelectors, Result>,\r\n      createSelectorOptions: Simplify<\r\n        CreateSelectorOptions<\r\n          MemoizeFunction,\r\n          ArgsMemoizeFunction,\r\n          OverrideMemoizeFunction,\r\n          OverrideArgsMemoizeFunction\r\n        >\r\n      >\r\n    ]\r\n  ): OutputSelector<\r\n    InputSelectors,\r\n    Result,\r\n    OverrideMemoizeFunction,\r\n    OverrideArgsMemoizeFunction\r\n  > &\r\n    InterruptRecursion\r\n\r\n  /**\r\n   * Creates a memoized selector function.\r\n   *\r\n   * @param inputSelectors - An array of input selectors.\r\n   * @param combiner - A function that Combines the input selectors and returns an output selector. Otherwise known as the result function.\r\n   * @param createSelectorOptions - An optional options object that allows for further customization per selector.\r\n   * @returns A memoized output selector.\r\n   *\r\n   * @template InputSelectors - The type of the input selectors array.\r\n   * @template Result - The return type of the `combiner` as well as the output selector.\r\n   * @template OverrideMemoizeFunction - The type of the optional `memoize` function that could be passed into the options object to override the original `memoize` function that was initially passed into `createSelectorCreator`.\r\n   * @template OverrideArgsMemoizeFunction - The type of the optional `argsMemoize` function that could be passed into the options object to override the original `argsMemoize` function that was initially passed into `createSelectorCreator`.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createselector `createSelector`}\r\n   */\r\n  <\r\n    InputSelectors extends SelectorArray<StateType>,\r\n    Result,\r\n    OverrideMemoizeFunction extends UnknownMemoizer = MemoizeFunction,\r\n    OverrideArgsMemoizeFunction extends UnknownMemoizer = ArgsMemoizeFunction\r\n  >(\r\n    inputSelectors: [...InputSelectors],\r\n    combiner: Combiner<InputSelectors, Result>,\r\n    createSelectorOptions?: Simplify<\r\n      CreateSelectorOptions<\r\n        MemoizeFunction,\r\n        ArgsMemoizeFunction,\r\n        OverrideMemoizeFunction,\r\n        OverrideArgsMemoizeFunction\r\n      >\r\n    >\r\n  ): OutputSelector<\r\n    InputSelectors,\r\n    Result,\r\n    OverrideMemoizeFunction,\r\n    OverrideArgsMemoizeFunction\r\n  > &\r\n    InterruptRecursion\r\n\r\n  /**\r\n   * Creates a \"pre-typed\" version of {@linkcode createSelector createSelector}\r\n   * where the `state` type is predefined.\r\n   *\r\n   * This allows you to set the `state` type once, eliminating the need to\r\n   * specify it with every {@linkcode createSelector createSelector} call.\r\n   *\r\n   * @returns A pre-typed `createSelector` with the state type already defined.\r\n   *\r\n   * @example\r\n   * ```ts\r\n   * import { createSelector } from 'reselect'\r\n   *\r\n   * export interface RootState {\r\n   *   todos: { id: number; completed: boolean }[]\r\n   *   alerts: { id: number; read: boolean }[]\r\n   * }\r\n   *\r\n   * export const createAppSelector = createSelector.withTypes<RootState>()\r\n   *\r\n   * const selectTodoIds = createAppSelector(\r\n   *   [\r\n   *     // Type of `state` is set to `RootState`, no need to manually set the type\r\n   *     state => state.todos\r\n   *   ],\r\n   *   todos => todos.map(({ id }) => id)\r\n   * )\r\n   * ```\r\n   * @template OverrideStateType - The specific type of state used by all selectors created with this selector creator.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createselector#defining-a-pre-typed-createselector `createSelector.withTypes`}\r\n   *\r\n   * @since 5.1.0\r\n   */\r\n  withTypes: <OverrideStateType extends StateType>() => CreateSelectorFunction<\r\n    MemoizeFunction,\r\n    ArgsMemoizeFunction,\r\n    OverrideStateType\r\n  >\r\n}\r\n\r\n/**\r\n * Creates a selector creator function with the specified memoization function\r\n * and options for customizing memoization behavior.\r\n *\r\n * @param options - An options object containing the `memoize` function responsible for memoizing the `resultFunc` inside `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`). It also provides additional options for customizing memoization. While the `memoize` property is mandatory, the rest are optional.\r\n * @returns A customized `createSelector` function.\r\n *\r\n * @example\r\n * ```ts\r\n * const customCreateSelector = createSelectorCreator({\r\n *   memoize: customMemoize, // Function to be used to memoize `resultFunc`\r\n *   memoizeOptions: [memoizeOption1, memoizeOption2], // Options passed to `customMemoize` as the second argument onwards\r\n *   argsMemoize: customArgsMemoize, // Function to be used to memoize the selector's arguments\r\n *   argsMemoizeOptions: [argsMemoizeOption1, argsMemoizeOption2] // Options passed to `customArgsMemoize` as the second argument onwards\r\n * })\r\n *\r\n * const customSelector = customCreateSelector(\r\n *   [inputSelector1, inputSelector2],\r\n *   resultFunc // `resultFunc` will be passed as the first argument to `customMemoize`\r\n * )\r\n *\r\n * customSelector(\r\n *   ...selectorArgs // Will be memoized by `customArgsMemoize`\r\n * )\r\n * ```\r\n *\r\n * @template MemoizeFunction - The type of the memoize function that is used to memoize the `resultFunc` inside `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`).\r\n * @template ArgsMemoizeFunction - The type of the optional memoize function that is used to memoize the arguments passed into the output selector generated by `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`). If none is explicitly provided, `weakMapMemoize` will be used.\r\n *\r\n * @see {@link https://reselect.js.org/api/createSelectorCreator#using-options-since-500 `createSelectorCreator`}\r\n *\r\n * @since 5.0.0\r\n * @public\r\n */\r\nexport function createSelectorCreator<\r\n  MemoizeFunction extends UnknownMemoizer,\r\n  ArgsMemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize\r\n>(\r\n  options: Simplify<\r\n    SetRequired<\r\n      CreateSelectorOptions<\r\n        typeof weakMapMemoize,\r\n        typeof weakMapMemoize,\r\n        MemoizeFunction,\r\n        ArgsMemoizeFunction\r\n      >,\r\n      'memoize'\r\n    >\r\n  >\r\n): CreateSelectorFunction<MemoizeFunction, ArgsMemoizeFunction>\r\n\r\n/**\r\n * Creates a selector creator function with the specified memoization function\r\n * and options for customizing memoization behavior.\r\n *\r\n * @param memoize - The `memoize` function responsible for memoizing the `resultFunc` inside `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`).\r\n * @param memoizeOptionsFromArgs - Optional configuration options for the memoization function. These options are then passed to the memoize function as the second argument onwards.\r\n * @returns A customized `createSelector` function.\r\n *\r\n * @example\r\n * ```ts\r\n * const customCreateSelector = createSelectorCreator(customMemoize, // Function to be used to memoize `resultFunc`\r\n *   option1, // Will be passed as second argument to `customMemoize`\r\n *   option2, // Will be passed as third argument to `customMemoize`\r\n *   option3 // Will be passed as fourth argument to `customMemoize`\r\n * )\r\n *\r\n * const customSelector = customCreateSelector(\r\n *   [inputSelector1, inputSelector2],\r\n *   resultFunc // `resultFunc` will be passed as the first argument to `customMemoize`\r\n * )\r\n * ```\r\n *\r\n * @template MemoizeFunction - The type of the memoize function that is used to memoize the `resultFunc` inside `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`).\r\n *\r\n * @see {@link https://reselect.js.org/api/createSelectorCreator#using-memoize-and-memoizeoptions `createSelectorCreator`}\r\n *\r\n * @public\r\n */\r\nexport function createSelectorCreator<MemoizeFunction extends UnknownMemoizer>(\r\n  memoize: MemoizeFunction,\r\n  ...memoizeOptionsFromArgs: DropFirstParameter<MemoizeFunction>\r\n): CreateSelectorFunction<MemoizeFunction>\r\n\r\n/**\r\n * Creates a selector creator function with the specified memoization\r\n * function and options for customizing memoization behavior.\r\n *\r\n * @param memoizeOrOptions - Either A `memoize` function or an `options` object containing the `memoize` function.\r\n * @param memoizeOptionsFromArgs - Optional configuration options for the memoization function. These options are then passed to the memoize function as the second argument onwards.\r\n * @returns A customized `createSelector` function.\r\n *\r\n * @template MemoizeFunction - The type of the memoize function that is used to memoize the `resultFunc` inside `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`).\r\n * @template ArgsMemoizeFunction - The type of the optional memoize function that is used to memoize the arguments passed into the output selector generated by `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`). If none is explicitly provided, `weakMapMemoize` will be used.\r\n * @template MemoizeOrOptions - The type of the first argument. It can either be a `memoize` function or an `options` object containing the `memoize` function.\r\n */\r\nexport function createSelectorCreator<\r\n  MemoizeFunction extends UnknownMemoizer,\r\n  ArgsMemoizeFunction extends UnknownMemoizer,\r\n  MemoizeOrOptions extends\r\n    | MemoizeFunction\r\n    | SetRequired<\r\n        CreateSelectorOptions<MemoizeFunction, ArgsMemoizeFunction>,\r\n        'memoize'\r\n      >\r\n>(\r\n  memoizeOrOptions: MemoizeOrOptions,\r\n  ...memoizeOptionsFromArgs: MemoizeOrOptions extends SetRequired<\r\n    CreateSelectorOptions<MemoizeFunction, ArgsMemoizeFunction>,\r\n    'memoize'\r\n  >\r\n    ? never\r\n    : DropFirstParameter<MemoizeFunction>\r\n) {\r\n  /** options initially passed into `createSelectorCreator`. */\r\n  const createSelectorCreatorOptions: SetRequired<\r\n    CreateSelectorOptions<MemoizeFunction, ArgsMemoizeFunction>,\r\n    'memoize'\r\n  > = typeof memoizeOrOptions === 'function'\r\n    ? {\r\n        memoize: memoizeOrOptions as MemoizeFunction,\r\n        memoizeOptions: memoizeOptionsFromArgs\r\n      }\r\n    : memoizeOrOptions\r\n\r\n  const createSelector = <\r\n    InputSelectors extends SelectorArray,\r\n    Result,\r\n    OverrideMemoizeFunction extends UnknownMemoizer = MemoizeFunction,\r\n    OverrideArgsMemoizeFunction extends UnknownMemoizer = ArgsMemoizeFunction\r\n  >(\r\n    ...createSelectorArgs: [\r\n      ...inputSelectors: [...InputSelectors],\r\n      combiner: Combiner<InputSelectors, Result>,\r\n      createSelectorOptions?: CreateSelectorOptions<\r\n        MemoizeFunction,\r\n        ArgsMemoizeFunction,\r\n        OverrideMemoizeFunction,\r\n        OverrideArgsMemoizeFunction\r\n      >\r\n    ]\r\n  ) => {\r\n    let recomputations = 0\r\n    let dependencyRecomputations = 0\r\n    let lastResult: Result\r\n\r\n    // Due to the intricacies of rest params, we can't do an optional arg after `...createSelectorArgs`.\r\n    // So, start by declaring the default value here.\r\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\r\n    let directlyPassedOptions: CreateSelectorOptions<\r\n      MemoizeFunction,\r\n      ArgsMemoizeFunction,\r\n      OverrideMemoizeFunction,\r\n      OverrideArgsMemoizeFunction\r\n    > = {}\r\n\r\n    // Normally, the result func or \"combiner\" is the last arg\r\n    let resultFunc = createSelectorArgs.pop() as\r\n      | Combiner<InputSelectors, Result>\r\n      | CreateSelectorOptions<\r\n          MemoizeFunction,\r\n          ArgsMemoizeFunction,\r\n          OverrideMemoizeFunction,\r\n          OverrideArgsMemoizeFunction\r\n        >\r\n\r\n    // If the result func is actually an _object_, assume it's our options object\r\n    if (typeof resultFunc === 'object') {\r\n      directlyPassedOptions = resultFunc\r\n      // and pop the real result func off\r\n      resultFunc = createSelectorArgs.pop() as Combiner<InputSelectors, Result>\r\n    }\r\n\r\n    assertIsFunction(\r\n      resultFunc,\r\n      `createSelector expects an output function after the inputs, but received: [${typeof resultFunc}]`\r\n    )\r\n\r\n    // Determine which set of options we're using. Prefer options passed directly,\r\n    // but fall back to options given to `createSelectorCreator`.\r\n    const combinedOptions = {\r\n      ...createSelectorCreatorOptions,\r\n      ...directlyPassedOptions\r\n    }\r\n\r\n    const {\r\n      memoize,\r\n      memoizeOptions = [],\r\n      argsMemoize = weakMapMemoize,\r\n      argsMemoizeOptions = [],\r\n      devModeChecks = {}\r\n    } = combinedOptions\r\n\r\n    // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\r\n    // is an array. In most libs I've looked at, it's an equality function or options object.\r\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\r\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\r\n    // we wrap it in an array so we can apply it.\r\n    const finalMemoizeOptions = ensureIsArray(memoizeOptions)\r\n    const finalArgsMemoizeOptions = ensureIsArray(argsMemoizeOptions)\r\n    const dependencies = getDependencies(createSelectorArgs) as InputSelectors\r\n\r\n    const memoizedResultFunc = memoize(function recomputationWrapper() {\r\n      recomputations++\r\n      // apply arguments instead of spreading for performance.\r\n      // @ts-ignore\r\n      return (resultFunc as Combiner<InputSelectors, Result>).apply(\r\n        null,\r\n        arguments as unknown as Parameters<Combiner<InputSelectors, Result>>\r\n      )\r\n    }, ...finalMemoizeOptions) as Combiner<InputSelectors, Result> &\r\n      ExtractMemoizerFields<OverrideMemoizeFunction>\r\n\r\n    let firstRun = true\r\n\r\n    // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\r\n    const selector = argsMemoize(function dependenciesChecker() {\r\n      dependencyRecomputations++\r\n      /** Return values of input selectors which the `resultFunc` takes as arguments. */\r\n      const inputSelectorResults = collectInputSelectorResults(\r\n        dependencies,\r\n        arguments\r\n      )\r\n\r\n      // apply arguments instead of spreading for performance.\r\n      // @ts-ignore\r\n      lastResult = memoizedResultFunc.apply(null, inputSelectorResults)\r\n\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        const { identityFunctionCheck, inputStabilityCheck } =\r\n          getDevModeChecksExecutionInfo(firstRun, devModeChecks)\r\n        if (identityFunctionCheck.shouldRun) {\r\n          identityFunctionCheck.run(\r\n            resultFunc as Combiner<InputSelectors, Result>,\r\n            inputSelectorResults,\r\n            lastResult\r\n          )\r\n        }\r\n\r\n        if (inputStabilityCheck.shouldRun) {\r\n          // make a second copy of the params, to check if we got the same results\r\n          const inputSelectorResultsCopy = collectInputSelectorResults(\r\n            dependencies,\r\n            arguments\r\n          )\r\n\r\n          inputStabilityCheck.run(\r\n            { inputSelectorResults, inputSelectorResultsCopy },\r\n            { memoize, memoizeOptions: finalMemoizeOptions },\r\n            arguments\r\n          )\r\n        }\r\n\r\n        if (firstRun) firstRun = false\r\n      }\r\n\r\n      return lastResult\r\n    }, ...finalArgsMemoizeOptions) as unknown as Selector<\r\n      GetStateFromSelectors<InputSelectors>,\r\n      Result,\r\n      GetParamsFromSelectors<InputSelectors>\r\n    > &\r\n      ExtractMemoizerFields<OverrideArgsMemoizeFunction>\r\n\r\n    return Object.assign(selector, {\r\n      resultFunc,\r\n      memoizedResultFunc,\r\n      dependencies,\r\n      dependencyRecomputations: () => dependencyRecomputations,\r\n      resetDependencyRecomputations: () => {\r\n        dependencyRecomputations = 0\r\n      },\r\n      lastResult: () => lastResult,\r\n      recomputations: () => recomputations,\r\n      resetRecomputations: () => {\r\n        recomputations = 0\r\n      },\r\n      memoize,\r\n      argsMemoize\r\n    }) as OutputSelector<\r\n      InputSelectors,\r\n      Result,\r\n      OverrideMemoizeFunction,\r\n      OverrideArgsMemoizeFunction\r\n    >\r\n  }\r\n\r\n  Object.assign(createSelector, {\r\n    withTypes: () => createSelector\r\n  })\r\n\r\n  return createSelector as CreateSelectorFunction<\r\n    MemoizeFunction,\r\n    ArgsMemoizeFunction\r\n  >\r\n}\r\n\r\n/**\r\n * Accepts one or more \"input selectors\" (either as separate arguments or a single array),\r\n * a single \"result function\" / \"combiner\", and an optional options object, and\r\n * generates a memoized selector function.\r\n *\r\n * @see {@link https://reselect.js.org/api/createSelector `createSelector`}\r\n *\r\n * @public\r\n */\r\nexport const createSelector =\r\n  /* #__PURE__ */ createSelectorCreator(weakMapMemoize)\r\n","import { createSelector } from './createSelectorCreator'\r\n\r\nimport type { CreateSelectorFunction } from './createSelectorCreator'\r\nimport type {\r\n  InterruptRecursion,\r\n  ObjectValuesToTuple,\r\n  OutputSelector,\r\n  Selector,\r\n  Simplify,\r\n  UnknownMemoizer\r\n} from './types'\r\nimport { assertIsObject } from './utils'\r\nimport type { weakMapMemoize } from './weakMapMemoize'\r\n\r\n/**\r\n * Represents a mapping of selectors to their return types.\r\n *\r\n * @template TObject - An object type where each property is a selector function.\r\n *\r\n * @public\r\n */\r\nexport type SelectorResultsMap<TObject extends SelectorsObject> = {\r\n  [Key in keyof TObject]: ReturnType<TObject[Key]>\r\n}\r\n\r\n/**\r\n * Represents a mapping of selectors for each key in a given root state.\r\n *\r\n * This type is a utility that takes a root state object type and\r\n * generates a corresponding set of selectors. Each selector is associated\r\n * with a key in the root state, allowing for the selection\r\n * of specific parts of the state.\r\n *\r\n * @template RootState - The type of the root state object.\r\n *\r\n * @since 5.0.0\r\n * @public\r\n */\r\nexport type RootStateSelectors<RootState = any> = {\r\n  [Key in keyof RootState]: Selector<RootState, RootState[Key], []>\r\n}\r\n\r\n/**\r\n * @deprecated Please use {@linkcode StructuredSelectorCreator.withTypes createStructuredSelector.withTypes<RootState>()} instead. This type will be removed in the future.\r\n * @template RootState - The type of the root state object.\r\n *\r\n * @since 5.0.0\r\n * @public\r\n */\r\nexport type TypedStructuredSelectorCreator<RootState = any> =\r\n  /**\r\n   * A convenience function that simplifies returning an object\r\n   * made up of selector results.\r\n   *\r\n   * @param inputSelectorsObject - A key value pair consisting of input selectors.\r\n   * @param selectorCreator - A custom selector creator function. It defaults to `createSelector`.\r\n   * @returns A memoized structured selector.\r\n   *\r\n   * @example\r\n   * <caption>Modern Use Case</caption>\r\n   * ```ts\r\n   * import { createSelector, createStructuredSelector } from 'reselect'\r\n   *\r\n   * interface RootState {\r\n   *   todos: {\r\n   *     id: number\r\n   *     completed: boolean\r\n   *     title: string\r\n   *     description: string\r\n   *   }[]\r\n   *   alerts: { id: number; read: boolean }[]\r\n   * }\r\n   *\r\n   * // This:\r\n   * const structuredSelector = createStructuredSelector(\r\n   *   {\r\n   *     todos: (state: RootState) => state.todos,\r\n   *     alerts: (state: RootState) => state.alerts,\r\n   *     todoById: (state: RootState, id: number) => state.todos[id]\r\n   *   },\r\n   *   createSelector\r\n   * )\r\n   *\r\n   * // Is essentially the same as this:\r\n   * const selector = createSelector(\r\n   *   [\r\n   *     (state: RootState) => state.todos,\r\n   *     (state: RootState) => state.alerts,\r\n   *     (state: RootState, id: number) => state.todos[id]\r\n   *   ],\r\n   *   (todos, alerts, todoById) => {\r\n   *     return {\r\n   *       todos,\r\n   *       alerts,\r\n   *       todoById\r\n   *     }\r\n   *   }\r\n   * )\r\n   * ```\r\n   *\r\n   * @example\r\n   * <caption>In your component:</caption>\r\n   * ```tsx\r\n   * import type { RootState } from 'createStructuredSelector/modernUseCase'\r\n   * import { structuredSelector } from 'createStructuredSelector/modernUseCase'\r\n   * import type { FC } from 'react'\r\n   * import { useSelector } from 'react-redux'\r\n   *\r\n   * interface Props {\r\n   *   id: number\r\n   * }\r\n   *\r\n   * const MyComponent: FC<Props> = ({ id }) => {\r\n   *   const { todos, alerts, todoById } = useSelector((state: RootState) =>\r\n   *     structuredSelector(state, id)\r\n   *   )\r\n   *\r\n   *   return (\r\n   *     <div>\r\n   *       Next to do is:\r\n   *       <h2>{todoById.title}</h2>\r\n   *       <p>Description: {todoById.description}</p>\r\n   *       <ul>\r\n   *         <h3>All other to dos:</h3>\r\n   *         {todos.map(todo => (\r\n   *           <li key={todo.id}>{todo.title}</li>\r\n   *         ))}\r\n   *       </ul>\r\n   *     </div>\r\n   *   )\r\n   * }\r\n   * ```\r\n   *\r\n   * @example\r\n   * <caption>Simple Use Case</caption>\r\n   * ```ts\r\n   * const selectA = state => state.a\r\n   * const selectB = state => state.b\r\n   *\r\n   * // The result function in the following selector\r\n   * // is simply building an object from the input selectors\r\n   * const structuredSelector = createSelector(selectA, selectB, (a, b) => ({\r\n   *   a,\r\n   *   b\r\n   * }))\r\n   *\r\n   * const result = structuredSelector({ a: 1, b: 2 }) // will produce { x: 1, y: 2 }\r\n   * ```\r\n   *\r\n   * @template InputSelectorsObject - The shape of the input selectors object.\r\n   * @template MemoizeFunction - The type of the memoize function that is used to create the structured selector. It defaults to `weakMapMemoize`.\r\n   * @template ArgsMemoizeFunction - The type of the of the memoize function that is used to memoize the arguments passed into the generated structured selector. It defaults to `weakMapMemoize`.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createStructuredSelector `createStructuredSelector`}\r\n   */\r\n  <\r\n    InputSelectorsObject extends RootStateSelectors<RootState> = RootStateSelectors<RootState>,\r\n    MemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize,\r\n    ArgsMemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize\r\n  >(\r\n    inputSelectorsObject: InputSelectorsObject,\r\n    selectorCreator?: CreateSelectorFunction<\r\n      MemoizeFunction,\r\n      ArgsMemoizeFunction\r\n    >\r\n  ) => OutputSelector<\r\n    ObjectValuesToTuple<InputSelectorsObject>,\r\n    Simplify<SelectorResultsMap<InputSelectorsObject>>,\r\n    MemoizeFunction,\r\n    ArgsMemoizeFunction\r\n  > &\r\n    InterruptRecursion\r\n\r\n/**\r\n * Represents an object where each property is a selector function.\r\n *\r\n * @template StateType - The type of state that all the selectors operate on.\r\n *\r\n * @public\r\n */\r\nexport type SelectorsObject<StateType = any> = Record<\r\n  string,\r\n  Selector<StateType>\r\n>\r\n\r\n/**\r\n * It provides a way to create structured selectors.\r\n * The structured selector can take multiple input selectors\r\n * and map their output to an object with specific keys.\r\n *\r\n * @template StateType - The type of state that the structured selectors created with this structured selector creator will operate on.\r\n *\r\n * @see {@link https://reselect.js.org/api/createStructuredSelector `createStructuredSelector`}\r\n *\r\n * @public\r\n */\r\nexport interface StructuredSelectorCreator<StateType = any> {\r\n  /**\r\n   * A convenience function that simplifies returning an object\r\n   * made up of selector results.\r\n   *\r\n   * @param inputSelectorsObject - A key value pair consisting of input selectors.\r\n   * @param selectorCreator - A custom selector creator function. It defaults to `createSelector`.\r\n   * @returns A memoized structured selector.\r\n   *\r\n   * @example\r\n   * <caption>Modern Use Case</caption>\r\n   * ```ts\r\n   * import { createSelector, createStructuredSelector } from 'reselect'\r\n   *\r\n   * interface RootState {\r\n   *   todos: {\r\n   *     id: number\r\n   *     completed: boolean\r\n   *     title: string\r\n   *     description: string\r\n   *   }[]\r\n   *   alerts: { id: number; read: boolean }[]\r\n   * }\r\n   *\r\n   * // This:\r\n   * const structuredSelector = createStructuredSelector(\r\n   *   {\r\n   *     todos: (state: RootState) => state.todos,\r\n   *     alerts: (state: RootState) => state.alerts,\r\n   *     todoById: (state: RootState, id: number) => state.todos[id]\r\n   *   },\r\n   *   createSelector\r\n   * )\r\n   *\r\n   * // Is essentially the same as this:\r\n   * const selector = createSelector(\r\n   *   [\r\n   *     (state: RootState) => state.todos,\r\n   *     (state: RootState) => state.alerts,\r\n   *     (state: RootState, id: number) => state.todos[id]\r\n   *   ],\r\n   *   (todos, alerts, todoById) => {\r\n   *     return {\r\n   *       todos,\r\n   *       alerts,\r\n   *       todoById\r\n   *     }\r\n   *   }\r\n   * )\r\n   * ```\r\n   *\r\n   * @example\r\n   * <caption>In your component:</caption>\r\n   * ```tsx\r\n   * import type { RootState } from 'createStructuredSelector/modernUseCase'\r\n   * import { structuredSelector } from 'createStructuredSelector/modernUseCase'\r\n   * import type { FC } from 'react'\r\n   * import { useSelector } from 'react-redux'\r\n   *\r\n   * interface Props {\r\n   *   id: number\r\n   * }\r\n   *\r\n   * const MyComponent: FC<Props> = ({ id }) => {\r\n   *   const { todos, alerts, todoById } = useSelector((state: RootState) =>\r\n   *     structuredSelector(state, id)\r\n   *   )\r\n   *\r\n   *   return (\r\n   *     <div>\r\n   *       Next to do is:\r\n   *       <h2>{todoById.title}</h2>\r\n   *       <p>Description: {todoById.description}</p>\r\n   *       <ul>\r\n   *         <h3>All other to dos:</h3>\r\n   *         {todos.map(todo => (\r\n   *           <li key={todo.id}>{todo.title}</li>\r\n   *         ))}\r\n   *       </ul>\r\n   *     </div>\r\n   *   )\r\n   * }\r\n   * ```\r\n   *\r\n   * @example\r\n   * <caption>Simple Use Case</caption>\r\n   * ```ts\r\n   * const selectA = state => state.a\r\n   * const selectB = state => state.b\r\n   *\r\n   * // The result function in the following selector\r\n   * // is simply building an object from the input selectors\r\n   * const structuredSelector = createSelector(selectA, selectB, (a, b) => ({\r\n   *   a,\r\n   *   b\r\n   * }))\r\n   *\r\n   * const result = structuredSelector({ a: 1, b: 2 }) // will produce { x: 1, y: 2 }\r\n   * ```\r\n   *\r\n   * @template InputSelectorsObject - The shape of the input selectors object.\r\n   * @template MemoizeFunction - The type of the memoize function that is used to create the structured selector. It defaults to `weakMapMemoize`.\r\n   * @template ArgsMemoizeFunction - The type of the of the memoize function that is used to memoize the arguments passed into the generated structured selector. It defaults to `weakMapMemoize`.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createStructuredSelector `createStructuredSelector`}\r\n   */\r\n  <\r\n    InputSelectorsObject extends SelectorsObject<StateType>,\r\n    MemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize,\r\n    ArgsMemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize\r\n  >(\r\n    inputSelectorsObject: InputSelectorsObject,\r\n    selectorCreator?: CreateSelectorFunction<\r\n      MemoizeFunction,\r\n      ArgsMemoizeFunction\r\n    >\r\n  ): OutputSelector<\r\n    ObjectValuesToTuple<InputSelectorsObject>,\r\n    Simplify<SelectorResultsMap<InputSelectorsObject>>,\r\n    MemoizeFunction,\r\n    ArgsMemoizeFunction\r\n  > &\r\n    InterruptRecursion\r\n\r\n  /**\r\n   * Creates a \"pre-typed\" version of\r\n   * {@linkcode createStructuredSelector createStructuredSelector}\r\n   * where the `state` type is predefined.\r\n   *\r\n   * This allows you to set the `state` type once, eliminating the need to\r\n   * specify it with every\r\n   * {@linkcode createStructuredSelector createStructuredSelector} call.\r\n   *\r\n   * @returns A pre-typed `createStructuredSelector` with the state type already defined.\r\n   *\r\n   * @example\r\n   * ```ts\r\n   * import { createStructuredSelector } from 'reselect'\r\n   *\r\n   * export interface RootState {\r\n   *   todos: { id: number; completed: boolean }[]\r\n   *   alerts: { id: number; read: boolean }[]\r\n   * }\r\n   *\r\n   * export const createStructuredAppSelector =\r\n   *   createStructuredSelector.withTypes<RootState>()\r\n   *\r\n   * const structuredAppSelector = createStructuredAppSelector({\r\n   *   // Type of `state` is set to `RootState`, no need to manually set the type\r\n   *   todos: state => state.todos,\r\n   *   alerts: state => state.alerts,\r\n   *   todoById: (state, id: number) => state.todos[id]\r\n   * })\r\n   *\r\n   * ```\r\n   * @template OverrideStateType - The specific type of state used by all structured selectors created with this structured selector creator.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createstructuredselector#defining-a-pre-typed-createstructuredselector `createSelector.withTypes`}\r\n   *\r\n   * @since 5.1.0\r\n   */\r\n  withTypes: <\r\n    OverrideStateType extends StateType\r\n  >() => StructuredSelectorCreator<OverrideStateType>\r\n}\r\n\r\n/**\r\n * A convenience function that simplifies returning an object\r\n * made up of selector results.\r\n *\r\n * @param inputSelectorsObject - A key value pair consisting of input selectors.\r\n * @param selectorCreator - A custom selector creator function. It defaults to `createSelector`.\r\n * @returns A memoized structured selector.\r\n *\r\n * @example\r\n * <caption>Modern Use Case</caption>\r\n * ```ts\r\n * import { createSelector, createStructuredSelector } from 'reselect'\r\n *\r\n * interface RootState {\r\n *   todos: {\r\n *     id: number\r\n *     completed: boolean\r\n *     title: string\r\n *     description: string\r\n *   }[]\r\n *   alerts: { id: number; read: boolean }[]\r\n * }\r\n *\r\n * // This:\r\n * const structuredSelector = createStructuredSelector(\r\n *   {\r\n *     todos: (state: RootState) => state.todos,\r\n *     alerts: (state: RootState) => state.alerts,\r\n *     todoById: (state: RootState, id: number) => state.todos[id]\r\n *   },\r\n *   createSelector\r\n * )\r\n *\r\n * // Is essentially the same as this:\r\n * const selector = createSelector(\r\n *   [\r\n *     (state: RootState) => state.todos,\r\n *     (state: RootState) => state.alerts,\r\n *     (state: RootState, id: number) => state.todos[id]\r\n *   ],\r\n *   (todos, alerts, todoById) => {\r\n *     return {\r\n *       todos,\r\n *       alerts,\r\n *       todoById\r\n *     }\r\n *   }\r\n * )\r\n * ```\r\n *\r\n * @see {@link https://reselect.js.org/api/createStructuredSelector `createStructuredSelector`}\r\n *\r\n * @public\r\n */\r\nexport const createStructuredSelector: StructuredSelectorCreator =\r\n  Object.assign(\r\n    <\r\n      InputSelectorsObject extends SelectorsObject,\r\n      MemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize,\r\n      ArgsMemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize\r\n    >(\r\n      inputSelectorsObject: InputSelectorsObject,\r\n      selectorCreator: CreateSelectorFunction<\r\n        MemoizeFunction,\r\n        ArgsMemoizeFunction\r\n      > = createSelector as CreateSelectorFunction<\r\n        MemoizeFunction,\r\n        ArgsMemoizeFunction\r\n      >\r\n    ) => {\r\n      assertIsObject(\r\n        inputSelectorsObject,\r\n        'createStructuredSelector expects first argument to be an object ' +\r\n          `where each property is a selector, instead received a ${typeof inputSelectorsObject}`\r\n      )\r\n      const inputSelectorKeys = Object.keys(inputSelectorsObject)\r\n      const dependencies = inputSelectorKeys.map(\r\n        key => inputSelectorsObject[key]\r\n      )\r\n      const structuredSelector = selectorCreator(\r\n        dependencies,\r\n        (...inputSelectorResults: any[]) => {\r\n          return inputSelectorResults.reduce((composition, value, index) => {\r\n            composition[inputSelectorKeys[index]] = value\r\n            return composition\r\n          }, {})\r\n        }\r\n      )\r\n      return structuredSelector\r\n    },\r\n    { withTypes: () => createStructuredSelector }\r\n  ) as StructuredSelectorCreator\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\nexport const selectArticles = (state) => state.articles.articlesList;\r\nexport const selectValue = (state) => state.articles.value;\r\n\r\nexport const selectFoundArticles = createSelector(\r\n  [selectArticles, selectValue],\r\n  (articles, value) => {\r\n    console.log(articles, value);\r\n    return articles.filter(\r\n      (article) =>\r\n        article.title.toLowerCase().includes(value.toLowerCase()) ||\r\n        article.description.toLowerCase().includes(value.toLowerCase())\r\n    );\r\n  }\r\n);\r\n","import css from \"./Articles.module.css\";\r\nimport Container from \"../../components/Container/Container.jsx\";\r\nimport backup from \"../../imgs/svg/backup.svg\";\r\nimport SearchForm from \"../../components/SearchForm/SearchForm.jsx\";\r\nimport { nanoid } from \"nanoid\";\r\nimport { useState, useEffect, use } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Header from \"../../components/Header/Header.jsx\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchArticles } from \"../../redux/articles/articlesAPI.js\";\r\nimport { setValue } from \"../../redux/articles/articlesSlice.js\";\r\nimport {\r\n  selectArticles,\r\n  selectValue,\r\n  selectFoundArticles,\r\n} from \"../../redux/articles/selectors.js\";\r\n// const Filter = styled.div``;\r\n\r\n// const Card = styled.li`\r\n\r\n// `;\r\n\r\n// const List = styled.ul`\r\n\r\n// `;\r\n\r\n// const LoadMore = styled.button`\r\n\r\n// `;\r\n\r\n// const Pagination = styled.ul`\r\n\r\n// `;\r\n\r\n// const LeftArrow = styled.div`\r\n\r\n// `;\r\n// const RightArrow = styled.div`\r\n\r\n// `;\r\n\r\n// const Checkbox = styled.input`\r\n\r\n// `;\r\n\r\nexport default function Articles() {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(fetchArticles());\r\n  }, [dispatch]);\r\n  const [topics, setTopics] = useState({\r\n    reception: false,\r\n    selections: false,\r\n    advicesForKitchen: false,\r\n    interestingStories: false,\r\n    workWithClients: false,\r\n  });\r\n  const [page, setPage] = useState([0, 1]);\r\n  const [selectedArr, setSelectedArr] = useState([]);\r\n  useEffect(() => {\r\n    const arr = [];\r\n    const keys = Object.keys(topics);\r\n    keys.forEach((key) => {\r\n      if (topics[key]) arr.push(key);\r\n    });\r\n    setSelectedArr(arr);\r\n  }, [topics]);\r\n  const articlesBase = useSelector(selectArticles);\r\n  const value = useSelector(selectValue);\r\n  const foundArticles = useSelector(selectFoundArticles);\r\n  console.log(\"found\", foundArticles);\r\n  console.log(\"value\", value);\r\n  const data = articlesBase.filter((article) =>\r\n    selectedArr.length === 0\r\n      ? true\r\n      : article.topic.toSorted().join().includes(selectedArr.toSorted()) ||\r\n        selectedArr.toSorted().join().includes(article.topic.toSorted())\r\n  );\r\n  const handleChange = (e) => {\r\n    dispatch(setValue(e.target.value));\r\n  };\r\n  return (\r\n    <>\r\n      <section>\r\n        <Header />\r\n        <Container>\r\n          <SearchForm\r\n            placeholder={\"Як приготувати чізкейк\"}\r\n            cb={handleChange}\r\n            value={value}\r\n          />\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexWrap: \"wrap\",\r\n              paddingLeft: \"20px\",\r\n              boxSizing: \"border-box\",\r\n            }}\r\n          >\r\n            <div className={css.articles__filter}>\r\n              <h2>Цікаві та корисні статті</h2>\r\n              <ul>\r\n                Тематика\r\n                <li key={nanoid()}>\r\n                  <input\r\n                    className={css.articles__checkbox}\r\n                    checked={topics.reception}\r\n                    onChange={(e) =>\r\n                      setTopics({ ...topics, reception: e.target.checked })\r\n                    }\r\n                    type=\"checkbox\"\r\n                  />\r\n                  Рецепти\r\n                </li>\r\n                <li key={nanoid()}>\r\n                  <input\r\n                    className={css.articles__checkbox}\r\n                    checked={topics.advicesForKitchen}\r\n                    onChange={(e) =>\r\n                      setTopics({\r\n                        ...topics,\r\n                        advicesForKitchen: e.target.checked,\r\n                      })\r\n                    }\r\n                    type=\"checkbox\"\r\n                  />\r\n                  Корисні поради на кухні\r\n                </li>\r\n                <li key={nanoid()}>\r\n                  <input\r\n                    className={css.articles__checkbox}\r\n                    checked={topics.selections}\r\n                    onChange={(e) =>\r\n                      setTopics({ ...topics, selections: e.target.checked })\r\n                    }\r\n                    type=\"checkbox\"\r\n                  />\r\n                  Підбірки\r\n                </li>\r\n                <li key={nanoid()}>\r\n                  <input\r\n                    className={css.articles__checkbox}\r\n                    checked={topics.workWithClients}\r\n                    onChange={(e) =>\r\n                      setTopics({\r\n                        ...topics,\r\n                        workWithClients: e.target.checked,\r\n                      })\r\n                    }\r\n                    type=\"checkbox\"\r\n                  />\r\n                  Робота з клієнтами\r\n                </li>\r\n                <li key={nanoid()}>\r\n                  <input\r\n                    className={css.articles__checkbox}\r\n                    checked={topics.interestingStories}\r\n                    onChange={(e) =>\r\n                      setTopics({\r\n                        ...topics,\r\n                        interestingStories: e.target.checked,\r\n                      })\r\n                    }\r\n                    type=\"checkbox\"\r\n                  />\r\n                  Цікаві історії\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <ul className={css.articles__list}>\r\n              {value\r\n                ? foundArticles.slice(page[0] * 6, page[1] * 6).map((card) => (\r\n                    <li className={css.articles__item} key={nanoid()}>\r\n                      <img src={card.url} alt=\"bakery\" />\r\n                      <h3>{card.title}</h3>\r\n                      <p>{card.description}</p>\r\n                      <Link to={`/articles/${nanoid()}`}>\r\n                        Читати далі\r\n                      </Link>\r\n                    </li>\r\n                  ))\r\n                : data.slice(page[0] * 6, page[1] * 6).map((card) => (\r\n                    <li className={css.articles__item} key={nanoid()}>\r\n                      <img src={card.url} alt=\"bakery\" />\r\n                      <h3>{card.title}</h3>\r\n                      <p>{card.description}</p>\r\n                      <Link to={`/articles/${nanoid()}`}>\r\n                        Читати далі\r\n                      </Link>\r\n                    </li>\r\n                  ))}\r\n            </ul>\r\n            <button\r\n              onClick={() => setPage([page[0], page[1] + 1])}\r\n              className={css.articles__loadmore}\r\n            >\r\n              <img src={backup} alt=\"LoadMore\" />\r\n              Більше статей\r\n            </button>\r\n            <div className={css.articles__pagination}>\r\n              <span className={css[\"articles__arrow--left\"]}>&#x3c;</span>\r\n              {data.map((article, idx) =>\r\n                (idx + 1) % 6 === 0 ? (\r\n                  page[0] + 1 === (idx + 1) / 6 ? (\r\n                    <li\r\n                      style={{ fontWeight: \"700\", background: \"#FDAD6D\" }}\r\n                      key={nanoid()}\r\n                      onClick={() =>\r\n                        setPage([(idx + 1) / 6 - 1, (idx + 1) / 6])\r\n                      }\r\n                    >\r\n                      {(idx + 1) / 6}\r\n                    </li>\r\n                  ) : (\r\n                    <li\r\n                      key={nanoid()}\r\n                      onClick={() =>\r\n                        setPage([(idx + 1) / 6 - 1, (idx + 1) / 6])\r\n                      }\r\n                    >\r\n                      {(idx + 1) / 6}\r\n                    </li>\r\n                  )\r\n                ) : null\r\n              )}\r\n              <span className={css[\"articles__arrow--right\"]}>&#x3e;</span>\r\n            </div>\r\n          </div>\r\n        </Container>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n","import { urlAlphabet as scopedUrlAlphabet } from './url-alphabet/index.js'\nexport { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << Math.log2(alphabet.length - 1)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step | 0\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length >= size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size | 0, random)\nexport let nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array((size |= 0)))\n  while (size--) {\n    id += scopedUrlAlphabet[bytes[size] & 63]\n  }\n  return id\n}\n","export const urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\n"],"names":["_ref","children","_jsx","className","styles","setIsOpen","css","overlay","_jsxs","modal","onClick","src","CloseIcon","alt","auth__title","auth__list","auth__item","Link","auth__img","CookieIcon","auth__box","auth__subtitle","auth__text","to","CupcakeIcon","Header","dispatch","useDispatch","isOpen","useSelector","state","auth","isOpenHeaderModal","toggleModal","_Fragment","Auth","header","Container","headerBox","headerLogo","type","headerCountryBtn","headerCountryText","headerNav","headerList","headerItem","NavLink","isActive","concat","headerActive","headerLink","_ref2","_ref3","headerSystemBox","headerChatBtn","xmlns","width","height","viewBox","fill","d","id","headerLoginBtn","headerLoginText","placeholder","cb","value","onChange","assertIsFunction","func","errorMessage","arguments","length","undefined","TypeError","ensureIsArray","item","Array","isArray","getDependencies","createSelectorArgs","dependencies","array","every","itemTypes","map","name","join","assertIsArrayOfFunctions","Symbol","Object","getPrototypeOf","Ref","WeakRef","constructor","deref","this","weakMapMemoize","options","fnNode","s","v","o","p","resultEqualityCheck","lastResult","resultsCount","memoized","cacheNode","i","l","arg","objectCache","WeakMap","objectNode","get","set","primitiveCache","Map","primitiveNode","terminatedNode","result","apply","_lastResult$deref","_lastResult","_lastResult$deref2","lastResultValue","call","clearCache","resetResultsCount","createSelectorCreator","memoizeOrOptions","_len","memoizeOptionsFromArgs","_key2","createSelectorCreatorOptions","memoize","memoizeOptions","createSelector2","_len2","_key3","recomputations","dependencyRecomputations","directlyPassedOptions","resultFunc","pop","combinedOptions","_objectSpread","argsMemoize","argsMemoizeOptions","devModeChecks","finalMemoizeOptions","finalArgsMemoizeOptions","memoizedResultFunc","selector","inputSelectorResults","inputSelectorArgs","push","collectInputSelectorResults","assign","resetDependencyRecomputations","resetRecomputations","withTypes","createSelector","createStructuredSelector","inputSelectorsObject","selectorCreator","object","assertIsObject","inputSelectorKeys","keys","structuredSelector","key","_len3","_key4","reduce","composition","index","selectArticles","articles","articlesList","selectValue","selectFoundArticles","console","log","filter","article","title","toLowerCase","includes","description","Articles","useEffect","fetchArticles","topics","setTopics","useState","reception","selections","advicesForKitchen","interestingStories","workWithClients","page","setPage","selectedArr","setSelectedArr","arr","forEach","articlesBase","foundArticles","data","topic","toSorted","SearchForm","e","setValue","target","style","display","flexWrap","paddingLeft","boxSizing","articles__filter","articles__checkbox","checked","nanoid","articles__list","slice","card","articles__item","url","articles__loadmore","backup","articles__pagination","idx","fontWeight","background","size","bytes","crypto","getRandomValues","Uint8Array"],"sourceRoot":""}